{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","props","total","perPage","currentPage","onPageChange","itemsPage","Math","ceil","pages","Array","from","keys","slice","className","classNames","disabled","href","onClick","map","page","active","items","to","numbers","n","push","getNumbers","App","useState","pageSelected","setPageSelected","pageStart","setPageStart","indexLastElement","indexFirstElement","currentElements","length","id","value","onChange","event","target","element","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAQC,MAAMC,KAAKD,MAAMJ,EAAY,GAAGM,QAAQC,MAAM,GAc5D,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBZ,IAFd,SAKE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBb,EACfc,QAxBW,WACbd,EAAc,GAChBC,EAAaD,EAAc,IAiBzB,oBAUDK,EAAMU,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQjB,IAAgBgB,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,KAZEA,MAgBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUZ,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAAeb,IAAgBE,EAC/BY,QAnDW,WACbd,EAAcE,GAChBD,EAAaD,EAAc,IA4CzB,wBCpEFkB,ECLC,SAAoBX,EAAcY,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAId,EAAMc,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,IAEA,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KASMC,EAAmBF,EAAYF,EAC/BK,EAAoBD,EAAmBJ,EAEvCM,EAAkBd,EAAMT,MAAMsB,EAAmBD,GAEvD,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWkB,EADX,mBAC+BG,EAAoB,EADnD,cAC0DD,EAD1D,eACiFZ,EAAMe,OADvF,OAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOT,EACPU,SA3BW,SAACC,GACpB,IAAQF,EAAUE,EAAMC,OAAhBH,MAERN,EAAa,GACbF,GAAiBQ,IAkBX,SA3BW,CAAC,EAAG,EAAG,GAAI,IAkCRpB,KAAI,SAAAwB,GAAO,OACrB,wBAAsBJ,MAAOI,EAA7B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOoB,EAAMe,OACblC,QAAS2B,EACT1B,YAAa4B,EACb3B,aAAc4B,IAGhB,6BACGG,EAAgBjB,KAAI,SAAA0B,GAAI,OACvB,oBAAe,UAAQ,OAAvB,mBAAkCA,IAAzBA,YE9DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a0db90da.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const itemsPage = Math.ceil(total / perPage);\n  const pages = Array.from(Array(itemsPage + 1).keys()).slice(1);\n\n  const handlePrev = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentPage < itemsPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrev}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        { disabled: currentPage === itemsPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === itemsPage}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const selectItem = [3, 5, 10, 20];\n\n  const [pageSelected, setPageSelected] = useState(5);\n  const [pageStart, setPageStart] = useState(1);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setPageStart(1);\n    setPageSelected(+value);\n  };\n\n  const indexLastElement = pageStart * pageSelected;\n  const indexFirstElement = indexLastElement - pageSelected;\n\n  const currentElements = items.slice(indexFirstElement, indexLastElement);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${pageStart} (items ${indexFirstElement + 1} - ${indexLastElement} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={pageSelected}\n            onChange={handleSelect}\n          >\n            {selectItem.map(element => (\n              <option key={element} value={element}>\n                {element}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={pageSelected}\n        currentPage={pageStart}\n        onPageChange={setPageStart}\n      />\n\n      <ul>\n        {currentElements.map(item => (\n          <li key={item} data-cy=\"item\">{`${item}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}